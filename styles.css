/* 
 * Global Styles and CSS Variables
 * Using CSS variables for consistent theming and easier dark/light mode switching
 * Color palette based on professional design standards
 */
:root {
    /* Light theme colors */
    --bg-color: #f5f5f5;           /* Page background */
    --text-color: #333;            /* Main text color */
    --primary-color: #4285f4;      /* Primary action color (Google blue) */
    --secondary-color: #f1f3f4;    /* Secondary backgrounds */
    --border-color: #dfe1e5;       /* Border colors */
    --button-hover: #3367d6;       /* Button hover state */
    --box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);  /* Standard shadow */
    --container-bg: #ffffff;       /* Container background */
    
    /* Status colors */
    --success-color: #34a853;      /* Success messages (Google green) */
    --error-color: #ea4335;        /* Error messages (Google red) */
    
    /* Dark theme colors (defined here as reference) */
    --dark-bg: #202124;            /* Dark background */
    --dark-element: #303134;       /* Dark UI elements */
    --dark-text: #e8eaed;          /* Dark theme text */
    --dark-border: #5f6368;        /* Dark theme borders */
}

/* 
 * Dark Theme Variable Overrides
 * These override the default variables when dark-theme class is applied
 */
body.dark-theme {
    --bg-color: #202124;           /* Dark background replaces light */
    --text-color: #e8eaed;         /* Light text for dark background */
    --secondary-color: #303134;    /* Darker UI elements */
    --border-color: #5f6368;       /* Visible but subtle borders */
    --container-bg: #303134;       /* Dark container background */
}

/* 
 * CSS Reset - Normalize styling across browsers
 * Ensures consistent rendering
 */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;        /* Includes padding in element width calculations */
}

/* 
 * Base Body Styles
 * Sets up the main document styling and layout
 */
body {
    font-family: 'Poppins', sans-serif;  /* Modern, clean font */
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;  /* Smooth theme transitions */
    min-height: 100vh;             /* Ensures full viewport height */
    display: flex;                 /* Sets up for flexbox layout */
    flex-direction: column;        /* Content flows vertically */
}

/* 
 * Main Container
 * Centers content and provides responsive sizing
 */
.container {
    max-width: 1200px;            /* Caps width on large screens */
    width: 95%;                   /* Uses 95% of viewport on smaller screens */
    margin: 2rem auto;            /* Centers horizontally with top/bottom margin */
    display: flex;
    flex-direction: column;
    gap: 2rem;                    /* Consistent spacing between sections */
    flex: 1;                      /* Allows container to fill available space */
}

/* 
 * Header Styles 
 * Contains title and theme toggle
 */
header {
    display: flex;
    justify-content: space-between;  /* Title on left, theme toggle on right */
    align-items: center;
    margin-bottom: 1rem;
}

/* Application title */
header h1 {
    font-size: 2rem;
    font-weight: 600;
    color: var(--primary-color);    /* Branded blue color */
}

/* 
 * Theme Toggle Button 
 * Changes between light/dark modes
 */
.theme-toggle {
    cursor: pointer;
    font-size: 1.5rem;
    color: var(--text-color);
    transition: transform 0.3s ease;  /* Smooth hover animation */
}

/* Scale effect on hover */
.theme-toggle:hover {
    transform: scale(1.1);          /* Slight enlargement for feedback */
}

/* 
 * Main Translation Container 
 * Houses both source and target text areas with exchange button
 */
.translation-container {
    display: flex;                  /* Side-by-side layout */
    gap: 1rem;                      /* Space between source/target */
    position: relative;             /* For absolute positioning of exchange button */
    justify-content: space-between;
    height: 320px;                  /* Fixed height for consistent layout */
}

/* 
 * Responsive Design for Mobile/Tablet
 * Changes to vertical layout on smaller screens
 */
@media (max-width: 768px) {
    .translation-container {
        flex-direction: column;     /* Stack vertically on mobile */
        height: auto;               /* Auto height for stacked layout */
    }
    
    .exchange-btn {
        transform: rotate(90deg);   /* Rotate arrow for vertical exchange */
        margin: 1rem auto;          /* Center button between areas */
    }
}

/* 
 * Text Containers 
 * Styled boxes that contain source and target text areas
 */
.text-container {
    flex: 1;                       /* Equal sizing */
    background-color: var(--container-bg);
    border-radius: 12px;           /* Rounded corners */
    box-shadow: var(--box-shadow); /* Subtle depth */
    display: flex;
    flex-direction: column;        /* Stacks controls, text area, and char count */
    overflow: hidden;              /* Keeps child elements inside rounded corners */
    border: 1px solid var(--border-color);
    transition: box-shadow 0.3s ease, border-color 0.3s ease; /* Smooth focus effect */
}

/* 
 * Focus state - activates when any child element has focus
 * Provides visual feedback when user is interacting with the container
 */
.text-container:focus-within {
    box-shadow: 0 4px 16px rgba(66, 133, 244, 0.2); /* Enhanced shadow */
    border-color: var(--primary-color);             /* Highlighted border */
}

/* 
 * Controls Bar 
 * Top section of each text container with language select and action buttons
 */
.controls {
    display: flex;
    justify-content: space-between;   /* Language select on left, buttons on right */
    padding: 1rem;
    border-bottom: 1px solid var(--border-color);
    background-color: var(--secondary-color);  /* Slightly different from main bg */
}

/* 
 * Language Selection Dropdown
 * Styled to look integrated with the control bar
 */
.language-select {
    padding: 0.5rem;
    border: none;                    /* Clean look without borders */
    border-radius: 4px;
    background-color: transparent;   /* Blends with control bar */
    color: var(--text-color);
    font-size: 0.9rem;
    font-weight: 500;                /* Medium weight for readability */
    cursor: pointer;                 /* Indicates interactivity */
    outline: none;                   /* Remove default focus outline */
    font-family: 'Poppins', sans-serif; /* Consistent with app font */
}

/* Dropdown options styling */
.language-select option {
    background-color: var(--container-bg);  /* Match container background */
}

/* 
 * Control Buttons Container
 * Groups action buttons in the control bar 
 */
.buttons {
    display: flex;
    gap: 0.5rem;        /* Consistent spacing between buttons */
}

/* 
 * Individual Control Buttons
 * Includes speak, copy, and clear buttons
 */
.control-btn {
    background: transparent;
    border: none;
    border-radius: 50%;   /* Circle shape */
    width: 32px;
    height: 32px;
    display: grid;
    place-items: center;  /* Centers icon in button */
    cursor: pointer;
    color: var(--text-color);
    transition: background-color 0.2s ease, opacity 0.3s ease; /* Smooth hover and disable effects */
}

/* Subtle background on hover for visual feedback */
.control-btn:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

/* 
 * Disabled button states
 * Used for speak buttons when TTS is unavailable
 */
.control-btn.disabled {
    opacity: 0.4;          /* Visual indicator of disabled state */
    cursor: not-allowed;   /* Different cursor indicates non-interactive */
    pointer-events: none;  /* Prevents clicks */
}

/* Alternative disabled state using HTML disabled attribute */
.control-btn:disabled {
    opacity: 0.4;
    cursor: not-allowed;
    pointer-events: none;
}

/* Dark theme specific hover effect */
.dark-theme .control-btn:hover {
    background-color: rgba(255, 255, 255, 0.1); /* Lighter hover effect for dark theme */
}

/* 
 * Source Text Input Area
 * Textarea for entering text to translate
 */
#source-text {
    flex: 1;              /* Takes up available height */
    width: 100%;
    padding: 1rem;
    border: none;
    resize: none;         /* Prevents manual resizing */
    font-family: 'Poppins', sans-serif;
    font-size: 1rem;
    color: var(--text-color);
    background-color: var(--container-bg);
    outline: none;        /* Removes default focus outline */
}

/* 
 * Target Text Display Area
 * Shows translation results (non-editable)
 */
.target-display {
    flex: 1;
    width: 100%;
    padding: 1rem;
    font-family: 'Poppins', sans-serif;
    font-size: 1rem;
    color: var(--text-color);
    background-color: var(--container-bg);
    overflow-y: auto;     /* Scrollable if content overflows */
    white-space: pre-wrap; /* Preserves whitespace but wraps text */
}

/* 
 * Exchange Button 
 * Centered between source and target areas to swap languages
 */
.exchange-btn {
    position: absolute;        /* Positioned independently of text flow */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);  /* Perfect centering */
    width: 40px;
    height: 40px;
    border-radius: 50%;        /* Circle shape */
    background-color: var(--primary-color);
    color: white;
    display: grid;
    place-items: center;       /* Centers the icon */
    border: none;
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.3s ease;  /* Smooth hover effect */
    z-index: 1;                /* Ensures button appears above other elements */
}

/* Scale and color change on hover for visual feedback */
.exchange-btn:hover {
    background-color: var(--button-hover);
    transform: translate(-50%, -50%) scale(1.1);  /* Slight enlargement */
}

/* 
 * Character Count Display
 * Shows current character count and limit
 */
.char-count {
    padding: 0.5rem 1rem;
    text-align: right;       /* Right-aligned for better visibility */
    font-size: 0.8rem;       /* Smaller font for auxiliary information */
    color: #777;             /* Subtle color for non-essential text */
    border-top: 1px solid var(--border-color);
    background-color: var(--secondary-color);
}

/* 
 * Main Translate Button
 * Primary action button with prominent styling
 */
#translate-btn {
    display: block;
    margin: 1.5rem auto;     /* Centered below text areas */
    padding: 0.8rem 2.5rem;  /* Comfortable size for clicking */
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 30px;     /* Pill shape for modern look */
    font-size: 1rem;
    font-weight: 500;        /* Slightly bolder for emphasis */
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.2s ease;
    box-shadow: 0 2px 8px rgba(66, 133, 244, 0.4);  /* Subtle elevation */
}

/* Hover state with floating effect */
#translate-btn:hover {
    background-color: var(--button-hover);
    transform: translateY(-2px);  /* Slight upward movement */
    box-shadow: 0 4px 12px rgba(66, 133, 244, 0.5);  /* Enhanced shadow */
}

/* Active state (when clicked) */
#translate-btn:active {
    transform: translateY(0);  /* Returns to original position */
}

/* 
 * Loading Spinner Overlay
 * Covers the entire screen during API operations
 */
.loading {
    position: fixed;           /* Fixed position covers entire viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);  /* Semi-transparent overlay */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;            /* Above all other content */
}

/*
 * Spinner Animation
 * Visual indicator during translation process
 */
.spinner {
    width: 50px;
    height: 50px;
    border: 5px solid rgba(255, 255, 255, 0.3);  /* Light gray circle */
    border-radius: 50%;
    border-top-color: var(--primary-color);      /* Colored segment */
    animation: spin 1s ease-in-out infinite;     /* Continuous rotation */
}

/* Rotation animation keyframes */
@keyframes spin {
    to {
        transform: rotate(360deg);  /* Full 360° rotation */
    }
}

/* 
 * Utility class to hide elements
 * Used by JS to toggle visibility
 */
.hidden {
    display: none;  /* Completely removes from layout */
}

/* 
 * Notification System
 * Toast notifications for user feedback
 */
.notification {
    position: fixed;            /* Positioned relative to viewport */
    bottom: 20px;               /* Distance from bottom */
    right: 20px;                /* Distance from right */
    padding: 12px 20px;
    background-color: var(--success-color);  /* Default: success (green) */
    color: white;
    border-radius: 4px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);  /* Subtle shadow for depth */
    transform: translateY(100px);  /* Initial position (offscreen) */
    opacity: 0;                    /* Initial transparency */
    transition: transform 0.3s ease, opacity 0.3s ease;  /* Smooth entrance/exit */
    z-index: 1000;                 /* Above other content */
}

/* Active notification state (controlled by JS) */
.notification.show {
    transform: translateY(0);   /* Slides up into view */
    opacity: 1;                 /* Fully visible */
}

/* Error notification variant */
.notification.error {
    background-color: var(--error-color);  /* Red for errors */
}

/* Warning notification variant */
.notification.warning {
    background-color: #fbbc05;  /* Yellow/orange for warnings */
}

/* 
 * Responsive Styles for Small Mobile Devices
 * Optimizes layout for screen width below 576px
 */
@media (max-width: 576px) {
    .container {
        width: 100%;          /* Full width on mobile */
        margin: 1rem 0;       /* Reduced margins */
        padding: 0 1rem;      /* Side padding for readability */
    }
    
    header h1 {
        font-size: 1.5rem;    /* Smaller title on small screens */
    }
}
